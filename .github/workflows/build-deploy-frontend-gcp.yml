name: Build and deploy frontend to SKIP
on:
  workflow_dispatch:
    inputs:
      commit_sha:
        description: 'Commit hash to deploy'
        default: ''
        type: string
      dev:
        description: 'Deploy to dev'
        required: true
        type: boolean
      prod:
        description: 'Deploy to prod'
        required: true
        type: boolean
  pull_request:
    branches:
      - main
    paths-ignore:
      - backend**
      - .sikkerhet**
      - compose.yaml
      - README**
  push:
    paths-ignore:
      - backend**
      - .sikkerhet**
      - compose.yaml
      - README**
    branches:
      - main

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  REGION: europe-north1
  IMAGE_NAME: ${{ github.repository }}-frontend

jobs:
  build-dev:
    name: Build and push docker image for dev
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    outputs:
      image_url: ${{ steps.setOutput.outputs.image_url }}

    steps:
      - name: Checkout code
        if: ${{ !(github.event_name == 'workflow_dispatch' && inputs.commit_sha == '') }}
        uses: actions/checkout@v4

      - name: Checkout code
        if: ${{ github.event_name == 'workflow_dispatch' && inputs.commit_sha == '' }}
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Checkout specific commit
        if: ${{ github.event_name == 'workflow_dispatch' && inputs.commit_sha == '' }}
        run: git checkout ${{ github.event.inputs.commit_sha }}

      - name: Authenticate to Google Cloud
        id: auth
        uses: "google-github-actions/auth@v2"
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ env.PROJECT_ID }}

      - name: "Docker auth"
        run: |-
          gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev --quiet

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4.0.2
        with:
          node-version: 22.x
          cache: "npm"
          cache-dependency-path: "./frontend/beCompliant/package-lock.json"
          registry-url: "https://npm.pkg.github.com"

      - name: Run npm install and build
        working-directory: frontend/beCompliant
        run: |
          npm ci
          npm run build:dev_gcp

#      - name: Set tag
#        id: set-tag
#        env:
#          BRANCH: ${{ github.ref_name }}
#        run: |
#          if [[ "$BRANCH" == "main" || "$BRANCH" == "master" ]]; then
#            echo "image_tag=latest" >> $GITHUB_OUTPUT
#          else
#            echo "image_tag=prebuild-temp" >> $GITHUB_OUTPUT
#          fi
#
#      - name: Docker meta
#        id: meta
#        uses: docker/metadata-action@v5
#        with:
#          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
#          tags: |
#            type=sha,format=long
#            type=raw,value=${{ steps.set-tag.outputs.image_tag }}
#
#      - name: Build docker and push
#        id: build-docker
#        uses: docker/build-push-action@v5
#        with:
#          context: frontend/beCompliant
#          push: ${{ !github.event.pull_request.draft }}
#          tags: ${{ steps.meta.outputs.tags }}
#          labels: ${{ steps.meta.outputs.labels }}
#
#      - name: Set output with build values
#        id: setOutput
#        run: |
#          echo "image_url=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}@${{ steps.build-docker.outputs.digest }}" >> $GITHUB_OUTPUT


      - name: Build and Push Docker Image
        run: |
          docker build -t ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/regelrett-artifact-registry/${{ env.GCP_APP_NAME }}:latest . \
          docker push ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/regelrett-artifact-registry/${{ env.GCP_APP_NAME }}:latest

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy ${{ env.GCP_APP_NAME }} \
            --image ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/regelrett-artifact-registry/${{ env.GCP_APP_NAME }}:latest \
            --port 3000 \
            --region ${{ env.REGION }} \
            --platform managed \
            --allow-unauthenticated 


#  copy-deploy-gcp:
#    name: Copy Docker Image from GitHub Container Registry to Google Artifact Registry and deploy with cloud run
#    needs: build-dev
#    runs-on: ubuntu-latest
#    outputs:
#      image_url: ${{ steps.setOutput.outputs.image_url }}
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v4
#
#      - name: Set up Docker
#        uses: docker/setup-buildx-action@v2
#
#      - name: Log in to GitHub Container Registry
#        uses: docker/login-action@v2
#        with:
#          registry: ${{ env.REGISTRY }}
#          username: ${{ github.actor }}
#          password: ${{ secrets.GITHUB_TOKEN }}
#
#      - name: Authenticate to Google Cloud
#        id: auth
#        uses: "google-github-actions/auth@v2"
#        with:
#          credentials_json: ${{ secrets.GCP_SA_KEY }}
#
#      - name: Set up Google Cloud SDK
#        uses: google-github-actions/setup-gcloud@v1
#        with:
#          project_id: ${{ env.PROJECT_ID }}
#
#        # Auth Docker to access the artifact registry
#      - name: "Docker auth"
#        run: |-
#          gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev --quiet
#
#      - name: Login to GAR
#        uses: docker/login-action@v3
#        with:
#          registry: europe-north1-docker.pkg.dev
#          username: _json_key
#          password: ${{ secrets.GCP_SA_KEY }}
#
#      - name: Tag image for Google Artifact Registry
#        run: docker tag ${{ needs.build-dev.outputs.image_url }} ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/regelrett-artifact-registry/${{ env.GCP_APP_NAME }}:latest
#
#      - name: Push image to Google Artifact Registry
#        run: docker push ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/regelrett-artifact-registry/${{ env.GCP_APP_NAME }}:latest
#
#