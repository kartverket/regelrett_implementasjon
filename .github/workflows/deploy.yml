name: Build and deploy
on:
  workflow_dispatch:
    inputs:
      commit_sha:
        description: 'Commit hash to deploy'
        default: ''
        type: string
  pull_request:
    branches:
      - main
  push:
    paths-ignore:
      - .sikkerhet**
      - compose.yaml
      - README**
    branches:
      - main

env:
  REGION: europe-north1
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}


jobs:
  build:
    name: Build and push docker image
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    outputs:
      image_url: ${{ steps.setOutput.outputs.image_url }}
    steps:
      - name: Set repository name
        run: echo "IMAGE_NAME=$(echo '${{ github.repository }}' | cut -d '/' -f2)" >> $GITHUB_ENV

      - name: Checkout code
        if: ${{ !(github.event_name == 'workflow_dispatch' && inputs.commit_sha == '') }}
        uses: actions/checkout@v4

      - name: Checkout code
        if: ${{ (github.event_name == 'workflow_dispatch' && inputs.commit_sha == '') }}
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Checkout specific commit
        if: ${{ github.event_name == 'workflow_dispatch' && inputs.commit_sha != '' }}
        run: git checkout ${{ github.event.inputs.commit_sha }}

      - name: Set tag
        id: set-tag
        env:
          BRANCH: ${{ github.ref_name }}
        run: |
          if [[ "$BRANCH" == "main" || "$BRANCH" == "master" ]]; then
            echo "image_tag=latest" >> $GITHUB_OUTPUT
          else
            echo "image_tag=prebuild-temp" >> $GITHUB_OUTPUT
          fi

      - name: Login to Github Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=sha,format=long
            type=raw,value=${{ steps.set-tag.outputs.image_tag }}

      - name: Build docker and push
        id: build-docker
        uses: docker/build-push-action@v6
        with:
          push: ${{ !github.event.pull_request.draft }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Set output with build values
        id: setOutput
        run: |
          echo "image_url=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}@${{ steps.build-docker.outputs.digest }}" >> $GITHUB_OUTPUT
